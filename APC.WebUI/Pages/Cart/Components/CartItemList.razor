<div class="row align-items-center">
    <div class="col-3 col-md-2">
        <img src="@CardProduct.Product.ImageUrl" alt="Ecommerce" class="img-fluid">
    </div>
    <div class="col-4 col-md-5">
        <a href="/products/detail/@CardProduct.Product.Id" class="text-inherit">
            <h6 class="mb-0">@CardProduct.Product.Name</h6>
        </a>
        <span><small class="text-muted">@CardProduct.Product.Type.Name</small></span>
        <div class="mt-2 small lh-1">
            <span 
                class="text-decoration-none text-inherit cursor-pointer"
                @onclick="RemoveCartProduct">
                
                <span class="me-1 align-text-bottom">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="feather feather-trash-2 text-success">
                        <polyline points="3 6 5 6 21 6"></polyline>
                        <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2">
                        </path>
                        <line x1="10" y1="11" x2="10" y2="17"></line>
                        <line x1="14" y1="11" x2="14" y2="17"></line>
                    </svg>
                </span>
                <span class="text-muted">Remove</span>
            </span>
        </div>
    </div>
    <div class="col-3 col-md-3 col-lg-2">
        <div class="input-group input-spinner">
            @*<input type="button" value="-" class="button-minus  btn  btn-sm " data-field="quantity">
            <input type="number" step="1" max="10" value="1" name="quantity" class="quantity-field form-control-sm form-input   ">
            <input type="button" value="+" class="button-plus btn btn-sm " data-field="quantity">*@
            <EditForm Model="this">
                    @*@bind-Value="this.CardProduct.ProductQuantity" *@
                <InputSelect 
                    Value="this.CardProduct.ProductQuantity"
                    ValueExpression="() => this.CardProduct.ProductQuantity"
                    ValueChanged="((int args) => { this.CardProduct.ProductQuantity = args; ChangeProductQuantity(); })"
                    class="form-select"
                    @onchange="() => ChangeProductQuantity()">
                    @foreach (var qty in Enumerable.Range(1, 50))
                    {
                        <option id="qty_product" value="@qty">@qty</option>
                    }
                </InputSelect>
            </EditForm>
        </div>
    </div>
    <div class="col-2 text-lg-end text-start text-md-end col-md-2">
        <span class="fw-bold">$5.00</span>
    </div>
</div>

@code {
    [Parameter]
    public CartProductDTO CardProduct { get; set; }

    [Parameter]
    public EventCallback<CartProductDTO> RemoveProduct { get; set; }

    [Parameter]
    public EventCallback<CartProductDTO> ChangeQuantity { get; set; }

    public async Task RemoveCartProduct()
    {
        await this.RemoveProduct.InvokeAsync(this.CardProduct);
    }

    public async Task ChangeProductQuantity()
    { 
        await this.ChangeQuantity.InvokeAsync(this.CardProduct);
    }
}
