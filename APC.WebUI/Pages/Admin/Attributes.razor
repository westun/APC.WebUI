@page "/admin/attribute"
@inject IProductAttributeService productAttributeService

@if (productAttributeDTOs is null)
{
    <Spinner/>
}
else
{
    <div class="row">
        <div class="col-sm-6 mb-3">
            <h2>Add New Attribute</h2>
            <EditForm Model="productAttributeDTO" OnValidSubmit="OnProductAttributeSave">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div>
                    <label class="form-label">Name</label>
                    <div class="col-lg-6 col-md-10 col-sm-12">
                        <InputText @bind-Value="productAttributeDTO.Name" class="form-control"></InputText>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary mt-2">Save</button>
                @if (this.SaveInProgress)
                {
                    <span class="spinner-border text-success align-middle"></span>
                }
            </EditForm>
        </div>

        <div class="col-sm-6">
            <h2>Current Attributes</h2>
            <div>
                @foreach (var productAttribute in productAttributeDTOs)
                {
                    <p>
                        <span class="oi oi-circle-check text-success"></span>
                        @productAttribute.Name
                    </p>
                }
            </div>
        </div>
    </div>
}


@code {
    private ProductAttributeDTO[] productAttributeDTOs;
    private ProductAttributeDTO productAttributeDTO = new();
    private bool SaveInProgress { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.productAttributeDTOs =
            (await this.productAttributeService.GetProductAttributesAsync()).ToArray();
    }

    private async Task OnProductAttributeSave(EditContext editContext)
    {
        this.SaveInProgress = true;

        await this.productAttributeService.SaveProductAttribute(this.productAttributeDTO);

        this.productAttributeDTOs =
            (await this.productAttributeService.GetProductAttributesAsync()).ToArray();

        this.ClearForm();

        this.SaveInProgress = false;
    }

    private void ClearForm()
    {
        this.productAttributeDTO = new();
    }
}
