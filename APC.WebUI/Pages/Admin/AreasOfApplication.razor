@page "/admin/areasofapplication"
@inject IAreasOfApplicationService areasOfApplicationService
@inject IToastService toastService

@if (this.areasOfApplicationDTOs is null)
{
    <Spinner></Spinner>
}
else
{
    <div class="row">
        <div class="col-sm-6 mb-3">
            <h2>Add New Areas Of Application</h2>
            <EditForm Model="areasOfApplicationDTO" OnValidSubmit="OnNewAreasOfApplicationSubmit">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div>
                    <label class="form-label">Name</label>
                    <div class="col-lg-6 col-md-10 col-sm-12">
                        <InputText @bind-Value="areasOfApplicationDTO.Name" class="form-control"></InputText>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary mt-2">Save</button>
                @if (this.SaveInProgress)
                {
                    <span class="spinner-border text-success align-middle"></span>
                }
            </EditForm>
        </div>

        <div class="col-sm-6">
            <h2>Areas of Application</h2>
            <div>
                @foreach (var areasOfApplication in areasOfApplicationDTOs)
                {
                    <p>
                        <span class="oi oi-circle-check text-success"></span>
                        @areasOfApplication.Name
                    </p>
                }
            </div>
        </div>
    </div>
}

@code {
    private IEnumerable<AreasOfApplicationDTO> areasOfApplicationDTOs {get;set;}
    private AreasOfApplicationDTO areasOfApplicationDTO { get; set; } = new AreasOfApplicationDTO();
    private bool SaveInProgress { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.areasOfApplicationDTOs = 
                await areasOfApplicationService.GetAreasOfApplicationAsync();
            this.StateHasChanged();
        }
    }

    private async Task OnNewAreasOfApplicationSubmit(EditContext editContext)
    {
        this.SaveInProgress = true;

        var areasOfApplication = 
            await this.areasOfApplicationService.SaveAreasOfApplication(this.areasOfApplicationDTO);

        this.areasOfApplicationDTOs =
                await areasOfApplicationService.GetAreasOfApplicationAsync();

        this.toastService.ShowSuccess(
            message: $"Areas of Application ({areasOfApplication.Name}) has been Saved Successfully.",
            heading: "Success");

        this.ClearForm();

        this.SaveInProgress = false;
    }

    private void ClearForm()
    {
        this.areasOfApplicationDTO = new AreasOfApplicationDTO();
    }
    
}
