@page "/checkout"
@inject ICartService cartService
@inject IOrderService orderService
@inject NavigationManager navigationManager

@if (this.CartProducts is null)
{
    <Spinner/>
}
else
{
    <section class="mb-lg-14 mb-8 mt-8">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div>
                        <div class="mb-8">
                            <h1 class="fw-bold mb-0">Checkout</h1>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-7 col-md-12">
                    <div class="accordion accordion-flush" id="accordionFlushExample">
                        <div class="accordion-item py-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <a href="#" class="fs-5 text-inherit collapsed h4" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="true" aria-controls="flush-collapseOne">
                                    <i class="feather-icon icon-map-pin me-2 text-muted"></i>
                                    Select delivery address
                                </a>
                                <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                                    Add a new address
                                </button>
                            </div>
                            <div id="flush-collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionFlushExample">
                                <AddressSelection />
                            </div>
                        </div>
                        <div class="accordion-item py-4">
                            <a href="#" class="text-inherit h5" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                                <i class="feather-icon icon-shopping-bag me-2 text-muted"></i>Delivery instructions
                            </a>
                            <div id="flush-collapseThree" class="accordion-collapse collapse " data-bs-parent="#accordionFlushExample">
                                <div class="mt-5">
                                    <label for="DeliveryInstructions" class="form-label sr-only">Delivery instructions</label>
                                    <textarea class="form-control" id="DeliveryInstructions" rows="3" placeholder="Write delivery instructions "></textarea>
                                    <p class="form-text">Add instructions for how you want your order shopped and/or delivered</p>
                                    <div class="mt-5 d-flex justify-content-end">
                                        <a href="#" class="btn btn-outline-gray-400 text-muted" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">Prev</a>
                                        <a href="#" class="btn btn-primary ms-2" data-bs-toggle="collapse" data-bs-target="#flush-collapseFour" aria-expanded="false" aria-controls="flush-collapseFour">Next</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mt-5 d-flex justify-content-end">
                            @if (!this.SaveInProgress)
                            {
                                <a href="cart" class="btn btn-outline-gray-400 text-muted">
                                    Back to Cart
                                </a>
                            }
                            <button type="button" @onclick="PlaceOrder" disabled="@this.SaveInProgress" class="btn btn-primary ms-2">
                                @if (this.SaveInProgress)
                                {
                                    @:Placing Order...
                                    <span class="spinner-border align-middle"></span>
                                }
                                else
                                {
                                    @:Place Order
                                }
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-12 offset-lg-1 col-lg-4">
                    <OrderDetails CartProducts="this.CartProducts" />
                </div>
            </div>
        </div>
    </section>
}

@code {
    [CascadingParameter]
    private CascadingAppState AppState { get; set; }

    private IEnumerable<CartProductDTO> CartProducts { get; set; }

    private int CartId { get; set; }

    private bool SaveInProgress { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var cart = await this.cartService.GetCartAsync(AppState.CurrentAccountId);

        this.CartProducts = cart.CartProducts;
        this.CartId = cart.Id;

        if (!this.CartProducts.Any())
        {
            this.navigationManager.NavigateTo("cart");
        }
    }

    private async Task PlaceOrder()
    {
        this.SaveInProgress = true;
        await Task.Delay(1); //"flush changes" to cause page to rerender when SaveInProgress changes https://stackoverflow.com/questions/56604886/display-wait-or-spinner-on-api-call

        var orderDTO = new OrderDTO
        {
            AccountId = this.AppState.CurrentAccountId,
            Created = DateTimeOffset.UtcNow,
            OrderItems = this.CartProducts.Select(cp => new OrderItemDTO
            {
                Cost = 12.99m, //dummy data
                ProductId = cp.ProductId,
                Quantity = cp.ProductQuantity,
            }).ToList(),
        };

        var order = await this.orderService.SaveOrderAsync(orderDTO);

        await this.cartService.CompleteCartAsync(this.CartId);

        await this.cartService.CreateCartAsync(new CartDTO 
        { 
            AccountId = this.AppState.CurrentAccountId 
        });

        this.AppState.CartItemCount = 0;

        this.navigationManager.NavigateTo($"order/{order.Id}/complete");

        this.SaveInProgress = false;
    }
}
