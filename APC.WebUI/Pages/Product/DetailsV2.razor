@page "/products/detail/{productId:int}"
@inject IProductService productService
@inject ISimilarProductsService similarProductsService

@if (this.product is null)
{
    <Spinner/>    
}
else
{
    <div class="row">
        <div class="col-md-6">
            <!-- img slide -->
            <div class="product" id="product">
                @*class="zoom"*@ @*onmousemove="zoom(event)"*@
                @*style="background-image: url(@product.ImageUrl)"*@
                <div>
                    <img style="width: 100%; height: auto;" src="@product.ImageUrl">
                </div>
            </div>
        </div>
        <div class="col-md-6 mt-3">
            <div class="ps-lg-10 mt-6 mt-md-0">
                <h1 class="mb-3">@product.Name</h1>
                <div class="mb-4">
                    <div class="badge text-bg-success px-5 py-1" >
                        @if (product.Recycled)
                        {
                            @:Recycled
                        }
                        else if (product.Category.Name != "Dispensers")
                        {
                            @:Virgin
                        }
                    </div>
                </div>
                
                <div class="fs-4 mb-3">
                    <span class="fw-bold text-dark">$32</span>
                    <span class="text-decoration-line-through text-muted">$35</span>
                    <span>
                        <small class="fs-6 ms-2 text-danger">
                            26% Off
                        </small>
                    </span>
                </div>
                <div>
                    <div class="input-group input-spinner  ">
                        <input type="button" value="-" class="button-minus  btn  btn-sm " data-field="quantity">
                        <input type="number" step="1" max="10" value="1" name="quantity" class="quantity-field form-control-sm form-input   ">
                        <input type="button" value="+" class="button-plus btn btn-sm " data-field="quantity">
                    </div>
                </div>
                <div class="mt-3 row justify-content-start g-2 align-items-center">
                    <div class="col-xxl-4 col-lg-4 col-md-5 col-5 d-grid">
                        <button type="button" class="btn btn-primary">
                            <i class="feather-icon icon-shopping-bag me-2"></i>
                            Add to cart
                        </button>
                    </div>
                </div>
                
                <hr class="my-6">
                <h3>Product Info</h3>
                @if (this.product.BrochureUrl is not null)
                {
                    <div class="mt-3 mb-2">
                        <a href="@this.product.BrochureUrl" target="_blank">
                            <span class="bi bi-download"></span>
                            Download Our Brochure
                        </a>
                    </div>
                }
                <div>
                    <table class="table table-borderless">
                        <tbody>
                            @foreach (var pav in product.ProductAttributesValues)
                            {
                                <tr>
                                    <td class="w-5 ">@pav.ProductAttribute.Name:</td>
                                    <td class="w-20"><strong>@pav.Value</strong></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <hr class="my-6"/>
                <div>
                    <h3>Areas of Application</h3>
                    @foreach (var aoa in this.product.AreasOfApplications)
                    {
                        <span class="badge text-bg-light-warning me-3 mb-3 py-2 px-5">@aoa.Name</span>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <SimilarProductDetail SimilarProductsDTO="this.similarProductsDTOs"/>

    <div class="mb-5"></div>
}

@code {
    [Parameter]
    public int ProductId { get; set; }

    private ProductDTO product { get; set; }
    private IEnumerable<SimilarProductsDTO> similarProductsDTOs { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        this.product = await this.productService.GetProductByIdAsync(this.ProductId);
        this.similarProductsDTOs =
            await this.similarProductsService.GetSimilarProductsByProductIdAsync(this.ProductId);
    }
}
